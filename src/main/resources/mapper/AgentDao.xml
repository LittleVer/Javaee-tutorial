<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.vm.dao.AgentDao">

    <resultMap id="agent_map" type="Agent">
        <id property="id" column="id"/>
        <result property="openid" column="openid"/>
        <result property="level" column="level"/>
        <result property="agentName" column="agent_name"/>
        <result property="userIdsStr" column="user_ids"/>
        <result property="area" column="area"/>
    </resultMap>


    <select id="find" resultMap="agent_map" parameterType="Agent">
        SELECT * FROM agent
        <where>
        	<if test="level!=null">
        		and level=#{level}
        	</if>
        	<if test="agentName!=null and agentName!=''">
        		and agent_name like concat('%',#{agentName},'%')
        	</if>
        	<if test="area!=null and area!=''">
        		and area like concat('%',#{area},'%')
        	</if>
        </where>
    </select>

    <select id="findById" parameterType="long" resultMap="agent_map">
        SELECT * FROM agent WHERE id = #{value}
    </select>
    
    <select id="findByOpenId" parameterType="string" resultMap="agent_map">
        SELECT * FROM agent WHERE openid = #{openid}
    </select>

    <update id="update" parameterType="Agent">
        UPDATE agent 
        <set>
        	<if test="openid!=null and openid!=''">
        		openid=#{openid},
        	</if>
        	<if test="level!=null">
        		level=#{level},
        	</if>
        	<if test="agentName!=null and agentName!=''">
        		agent_name=#{agentName},
        	</if>
        	<if test="area != null and area!=''">
        		area=#{area},
        	</if>
        	<if test="userIdsStr != null and userIdsStr != ''">
        		user_ids=#{userIdsStr},
        	</if>
        </set>
        WHERE id = #{id}
    </update>

    <insert id="add" parameterType="Agent">
        INSERT INTO agent(openid,level,agent_name,user_ids,area) VALUES(#{openid},#{level},#{agentName},#{userIdsStr},#{area})
    </insert>

    <delete id="delete" parameterType="long">
        DELETE FROM agent WHERE id = #{id}
    </delete>
</mapper>